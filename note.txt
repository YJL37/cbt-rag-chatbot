Langchain Agent

Agent = tool을 사용하는 친구

계산 전문 챗봇
query: 1 + 1
query => llm => output

query: ~~~~~~
llm의 능력부족
=> 다른 서비스
Mathematica MatLab

query => MatLab으로 계산해 => llm => output

query => internet search => llm => output

배달 챗봇
query => 배달의 민족 => llm => output


Agent 
- 기능: tool (function, 외부 api, rag_chain(retriever))

3종류
CBT / Transcript / Psychological Manual
input => CBT
input => CBT, Transcript

flexible context retrieval

구현방법
CBT: data... => indexing (table) => tool: CBT에서 정보를 가져오는 기능
Transcript: data... => indexing (table) => tool: transcript에서 제일 비슷한 예시를 가져와서 답변을 리턴하는 기능
Psyc: data... => indexing (table) => tool: Pscy에서 ...




<Note on Program Flow>
python run.py --eval을 실행하면 무슨일이 벌어질까?
1) config.yaml을 이용해 CbtRAG instance를 생성한다. [DONE]

2) indexing을 만들꺼냐? 라는 옵션을 물어본다. [DONE]
    만들겠다고하면, config.yaml의 dataset들을 나열하면서 각각 만들꺼니? 물어본다.
    CbtRAG instance의 create_indexing()을 호출한다.

    안 만들겠다고 하면, check existing dataset을 한다 (이건 지금 리서치에서 구현 x)
    지금은 그냥 check existing dataset 없이 바로 넘어가자.

=> All Indexing created!

3) Ready to query with following options 이러면서 config.yaml의 query 셋업을 보여준다. 
Pre-retrieval
- Multi query expansion: True/False
Post-retrieval
- Context TopK: 5
- Context Reranker: True/False
- Context compression: True/False

4) evaluate?????????












